
    SLight Project ToDo

=--= Future ideas:

[ ] If an User enters a page, that does not exist, and can create it, propose it to him :) Be User Friendly :)
[ ] In the 'Add content' chooser add the option "as sibling", that will add new content to the same parent.
[ ] Set-up CIS
[ ]     Track/test commits
[ ]     Run coverage test / report
[ ] Detect and report, if DB is non writable
[ ] Fix CMS::SpecField form (should contain checkboxes for 'Use...' so User can do the choice directly from Field form)
[ ] SLight::Handler::Browser
[ ]     SLight::Handler::Browser::Recent (list sub-pages in order in which they ware created - newer on top)
[ ]     SLight::Handler::Browser::Ordered (list sub-pages in order defined by 'order_by')
[ ] ContentSpec fields describing how to sort, what to put into title, menu, path, and so on, should be a templates, so that User can join fields, eg: '%hip%-%ID%'
[ ] Identify web robots. Use this information when performing authorization (add 'Robot' User type)
[ ] Switch to SQL::Abstract-like module (possibly deprecate SLight::Core::SQL)
[ ] Possibly rename Handler::User::Avatar to Handler::Core::Avatar
[ ] Ability to 'tag' objects with "permanent ID" - so an add-on can store it's config as an object.
[ ] User/Group API
[ ]     SLight::API::Group
[ ]         get_Group
[ ]         get_Groups
[ ]         get_Group_ids_where
[ ]         get_Groups_where
[ ]         add_Group
[ ]         update_Group
[ ]         delete_Group
[ ]         add_to_Group
[ ]         remove_from_Group
[ ]         get_Group_content
[ ]         get_User_Groups
[ ] User Group support
[ ]     SLight::Handler::Group
[ ]         SLight::Handler::Group::List::View
[ ]             Implement
[ ]             Test
[ ]         SLight::Handler::Group::Group::New
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::Group::Group::Edit
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::Group::Group::Delete
[ ]             Show dialog
[ ]             Perform the operation
[ ]             Test
[ ]         SLight::Handler::Group::Permissions::View
[ ]             Implement
[ ]             Test
[ ]         SLight::Handler::Group::Permissions::Change
[ ]             Implement
[ ]             Test
[ ]         SLight::Handler::Group::Users::List
[ ]             Implement
[ ]             Test
[ ]         SLight::Handler::Group::Users::Add
[ ]             Implement
[ ]             Test
[ ]         SLight::Handler::Group::Users::Remove
[ ]             Implement
[ ]             Test
[ ] Improve code sharing between 'Account' and 'MyAccount' Handler modules.
[ ] Implement ability to verify, if a Handler exists (such check is hard at the moment).

=--= v1.0.0 - ""

[ ] Development
[ ]     ...
[ ] Improvements
[ ]     ...
[ ] Bugs
[ ]     ...
[ ] Release to the public
[ ]     Bump version
[ ]     Build packages
[ ]     Beta-test
[ ]     Upload package for public consumption
[ ]     Spread the news :)

=--= v0.0.9 - ""

[ ] Development
[ ]     ...
[ ] Improvements
[ ]     ...
[ ] Bugs
[ ]     ...
[ ] Release to the public
[ ]     Bump version
[ ]     Build packages
[ ]     Beta-test
[ ]     Upload package for public consumption
[ ]     Spread the news :)

=--= v0.0.8 - ""

[ ] Development
[ ]     AJAX
[ ]         Upgrade all applicable functionality to support AJAX
[ ]     ...
[ ] Improvements
[ ]     ...
[ ] Bugs
[ ]     ...
[ ] Release to the public
[ ]     Bump version
[ ]     Build packages
[ ]     Beta-test
[ ]     Upload package for public consumption
[ ]     Spread the news :)

=--= v0.0.7 - "Comments and Attachments"

[ ] API
[ ]     Comment store
[-] DataStructure
[ ]     SLight::DataStructure::Table (ex CoMe...GenericTable)
[ ]         Implement
[ ]         Test
[-]     SLight::DataStructure::Table::Properties (ex CoMe...GenericProperties)
[ ]         Implement
[ ]         Test
[ ]     SLight::DataStructure::Form::Diff (CoMe...DiffForm)
[ ]         Implement
[ ]         Test
[ ] CMS
[ ]     SLight::Handler::CMS::Entry
[ ]         SLight::Handler::CMS::Entry::Details <-- Display the object with all Assets and Comments shown on page.
[ ]             Ability for the main object to instruct the Protocol, that it wants to replace aux objects with own stuff.
[ ]             Replace aux objects with 'SLight::Handler::CMS::Entry::Assets' and 'SLight::Handler::CMS::Entry::Comments'
[ ]             Test
[ ]         SLight::Handler::CMS::Entry::Attach <-- attach a file to the object as an Asset
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::CMS::Entry::Assets <-- detailed information about assets attached to the CMS object
[ ]             Implement
[ ]             Test
[ ]         SLight::Handler::CMS::Entry::Comment <-- post a comment about the CMS object
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::CMS::Entry::Comments <-- list comments from selected the CMS object
[ ]             Implement
[ ]             Test
[ ]         SLight::Handler::CMS::Entry::Translate
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ] SLight API
[ ]     Content
[ ]         Support 'login' and 'user_id' parameters, along with 'email', to sign the stuff.
[ ]     Asset
[ ]         Support 'login' and 'user_id' parameters, along with 'email', to sign the stuff.
[ ] SLight::Addon::Core::Debug
[ ]     Implementation
[ ]     Test
[ ] HTML templateing-related
[ ]     Add 'delimiter' - either as a widget, or as sub-section to lists
[ ] Development
[ ]     In Handler tests - check if CGI parameters send in a request are the ones defined in previews one.
[ ]     Built-in EVK support in Test::Handler
[ ]     Built-in Email support in Test::Handler
[ ]     Built-in SLight::IO::unique_id support in Test::Handler
[ ]     Implement SLight::Dbg (with Dbg, a Dumper-like function)
[ ]     Make sure, that every module has SLight::Dbg included in it (do there is always an 'warn Data::Dumper::Dumper' named D around)
[ ]     Make a script, that creates fully usable sandbox from test site.
[ ]     Intercept STDERR (when enabled) and handle it to Debug Addon
[ ]     Create module with Validator 'magic' - common metadata (SLight User hash, etc)
[ ] Migration/backup utility
[ ]     Dump utility
[ ]     Import utility
[ ]     Migrate utility
[ ] CMS edit functions
[ ]     Select templates from drop-down list
[ ]     Select on-page index from drop-down menu
[ ]     Ability to edit on-page-index
[ ]     Preview in CMS add/edit forms.
[ ] Bugs
[ ]     Split 'content' into "objects before", "main object", "objects after" (with 'content' support maintained)
[ ]     On CMS Delete dialog, the 'No' option redirects to the dialog (should redirect to the object's View action)
[ ]     http://slight.notebook/_CMS_Spec/Field/1/Title/ is missing crumbs :(
[ ]     Language selection is f...broken. Plugin needs to set different (more sane) classes too!
[ ]     User must be able to chose position when adding new content to a page.
[ ]     User must be able to change order of On-page (aux) content after added.
[ ]     Move html templates from Minimal to HtmlTemplates
[ ]     Implement the FIXME from SLight::Test::Site::Builder
[ ]     Some API calls (Asset) should return login as well (not just email)
[ ]     When there is a DB error (like when appending new content to a page) there is only 'Internal error' displayed. This should be handled better.
[ ]     When appending new content to a page: on_page_index is not handled correctly
[ ] Release to the public
[ ]     Bump version
[ ]     Build packages
[ ]     Beta-test
[ ]     Upload package for public consumption
[ ]     Spread the news :)

=--= v0.0.6 - "Forum"

[ ] Refactoring of ContentModel.pm
[ ]     Migration to Core::Accessor
[ ]         owner support
[ ]         Update SLight/API/ContentSpec.pm
[ ]         Update SLight/API/EVK.pm
[ ]         Update SLight/API/Content.pm
[ ]         Update SLight/API/User.pm
[ ]         Update SLight/API/Asset.pm
[ ]     API::Page
[ ]         Ability to return owning_module and ID of main content element, so it's dead-simple to evaluate if Use has permissions to it.
[ ] Forum-related Handler objects
[ ]     SLight::Handler::Forum::Root
[ ]         SLight::Handler::Forum::Root::New
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::Forum::Root::Edit
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::Forum::Root::Delete
[ ]             Show dialog
[ ]             Perform the operation
[ ]             Test
[ ]     SLight::Handler::Forum::Category
[ ]         SLight::Handler::Forum::Category::Delete
[ ]             Show dialog
[ ]             Perform the operation
[ ]             Test
[ ]         SLight::Handler::Forum::Category::New
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::Forum::Category::Edit
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::Forum::Category::Threads
[ ]             Implement
[ ]             Test
[ ]     SLight::Handler::Forum::Reply
[ ]         SLight::Handler::Forum::Reply::New
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::Forum::Reply::Quote
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::Forum::Replay::Edit
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::Forum::Reply::Delete
[ ]             Show dialog
[ ]             Perform the deletion
[ ]             Test
[ ]     SLight::Handler::Forum::Thread
[ ]         SLight::Handler::Forum::Thread::New
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::Forum::Thread::Edit
[ ]             Form - show
[ ]             Form - save
[ ]             Test
[ ]         SLight::Handler::Forum::Thread::View
[ ]             Implement
[ ]             Test
[ ]         SLight::Handler::Forum::Thread::Delete
[ ]             Show dialog
[ ]             Perform the deletion
[ ]             Test
[ ] SLight::HandlerUtils::Pager
[ ]     Basic implementation
[ ]     Add 'order by' to Handler::List::* (so lists control how to sort)
[ ]     Integrating with lists
[ ]         Headlines list
[ ]         Aggregator list
[ ]         Blog-like list
[ ]         News-like list
[ ] Various improvements
[ ]     Page/Content form: make title, menu and breadcrumb optional - use 'Path' (or other property) as default.
[ ] Template enging improvements
[ ]     Use default HTML snippets, if a widget is not defined in template.
[ ]     Use built-in template, if no other template can be reached.
[ ]     Support for 'style' attribute in mk_*_token and bellow.
[ ]     Implement 'Fieldset' widget (groups form entries).
[ ] Bugfixes
[ ]     Default value for Date / DateTime fields should be "today"
[ ] Release to the public
[ ]     Bump version to 0.0.6
[ ]     Make package
[ ]     Beta-test
[ ]     Upload package for public consumption
[ ]     Spread the news :)

=--= v0.0.5 - "Lists and Objects"

[X] Contente/Page/Entity refactoring
[X]     Add 'menu_order' (integer) to Page_Entity, for use in menus. Items in menu will be sorted from lowest to highest.
[X]     Add 'title', 'menu' and 'breadcrumb' as Page properties (with special l10n support).
[X]         Forge SQL
[X]         Replace SLight::Core::Entity with SLight::Core::Accessor.
[X]             Ability to define 'up' relations across tables (get fields from joined tables).
[X]             add entity
[X]             get entity
[X]             get entity fields
[X]             get entities
[X]             get entities fields
[X]             get entities ids where
[X]             get entities fields where
[X]             delete_ENTITY
[X]             delete_ENTITIES
[X]             metadata support
[X]             Ability to define 'down' relations across tables (get fields from joined tables).
[X]             Update SLight/API/Page.pm
[X]         Update Root Menu Addon
[X]         Update Menu Addon
[X]         Update Sub Menu Addon
[X]         Update Page PathHandler Breadcrumb generation
[X]         Update Content Entry Form: add new fields to 'page' section
[X]     Refactor Content API.
[X]         Forge SQL
[X]         Update Content.pm
[X]         Fix regressions
[X] CMS Lists
[X]     Headlines list (display titles of up to n child items, linking to their pages)
[X]     Aggregator list (display up to n child items in full form, as if they ware parts of the page)
[X]     Blog-like list (display up to n child items in full form, with 'Read more' links)
[X]     News-like list (display up to n summarized child items, with 'Read more' links)
[X]     Gallery-like browser (display n items with in-place zoom support)
[X] HTML/Template improvements
[X]     Ability to use widgets as labels for Link (and some other widgets)
[>] Bugs/Improvements
[X]     Remove 'generic' class names.
[X]     Support for 'id' attribute in mk_*_token and bellow.
[X]     Old session files are not deleted. They must be cleaned up!
[X]     Drop DB connection when major errors (especially internal!) happen.
[X]     Maintenance mode + script to enable/disable it.
[X]     When DB can not be opened, try to display error using templates... (do not throw an internal error!)
[X]     Send email when internal error is detected.
[X]     Do not show email field, if User is logged in.
[X]     L10N support in Template.pm (for example, try to load 'Default-en.html' before 'Default.html')
[X]     Add-on optimization: process only add-ons that are defined in given template.
[>] Release to the public
[X]     Bump version to 0.0.5
[>]     Make package
[ ]     Beta-test
[ ]     Upload package for public consumption
[ ]     Spread the news :)

    Definition of done:

        SLight can be used as CMS with no major limitations.

=--= Sprint 2 - Command line CMS - (X 2011-02-27) 2011-03-06

[X] Command line interface to manipulate CMS
[X]     Bootstrap the tool (support --help, --version, initialize config and such).
[X]     I/O support (loading/dumping Perl data structures).
[X]         YAML
[X]         JSON
[X]         XMS
[X]     --cms-list
[X]         Implement
[X]         Ensure that automated tests covers >99% of code
[X]     --cms-get
[X]         Implement
[X]         Ensure that automated tests covers >99% of code
[X]     --cms-delete
[X]         Implement
[X]         Ensure that automated tests covers >99% of code
[X]     --cms-set
[X]         Implement
[X]         Ensure that automated tests covers >99% of code
[X] Bugs
[X]     Adding first page "kills" the CMS :(
[X]     When a part of the Template is missing, do not throw a 'hard' internal error.
[X]     Path element (bad/broken URLs) errors are not displayed?
[X] Release to the public
[X]     Make package
[X]     Beta-test
[X]     Upload package for public consumption
[X]     Spread the news :)

